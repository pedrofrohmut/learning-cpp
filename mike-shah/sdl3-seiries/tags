!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/pedro/programming/learning/learning-cpp/mike-shah/sdl3-seiries/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/v6.2.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
CONSOLE_ATTACHED_CONSOLE	SDL/src/SDL_log.c	/^    CONSOLE_ATTACHED_CONSOLE = 1,$/;"	e	enum:__anonb672b4030103	file:
CONSOLE_ATTACHED_ERROR	SDL/src/SDL_log.c	/^    CONSOLE_ATTACHED_ERROR = -1,$/;"	e	enum:__anonb672b4030103	file:
CONSOLE_ATTACHED_FILE	SDL/src/SDL_log.c	/^    CONSOLE_ATTACHED_FILE = 2,$/;"	e	enum:__anonb672b4030103	file:
CONSOLE_UNATTACHED	SDL/src/SDL_log.c	/^    CONSOLE_UNATTACHED = 0,$/;"	e	enum:__anonb672b4030103	file:
CalculateHashBucketsFromEstimate	SDL/src/SDL_hashtable.c	/^static Uint32 CalculateHashBucketsFromEstimate(int estimated_capacity)$/;"	f	typeref:typename:Uint32	file:
CleanupFreeableProperty	SDL/src/SDL_properties.c	/^static void SDLCALL CleanupFreeableProperty(void *userdata, void *value)$/;"	f	typeref:typename:void SDLCALL	file:
CleanupHintProperty	SDL/src/SDL_hints.c	/^static void SDLCALL CleanupHintProperty(void *userdata, void *value)$/;"	f	typeref:typename:void SDLCALL	file:
CleanupLogPrefixes	SDL/src/SDL_log.c	/^static void CleanupLogPrefixes(void)$/;"	f	typeref:typename:void	file:
CleanupLogPriorities	SDL/src/SDL_log.c	/^static void CleanupLogPriorities(void)$/;"	f	typeref:typename:void	file:
CleanupSurface	SDL/src/SDL_properties.c	/^static void SDLCALL CleanupSurface(void *userdata, void *value)$/;"	f	typeref:typename:void SDLCALL	file:
CopyOneProperty	SDL/src/SDL_properties.c	/^static bool SDLCALL CopyOneProperty(void *userdata, const SDL_HashTable *table, const void *key,/;"	f	typeref:typename:bool SDLCALL	file:
CopyOnePropertyData	SDL/src/SDL_properties.c	/^typedef struct CopyOnePropertyData$/;"	s	file:
CopyOnePropertyData	SDL/src/SDL_properties.c	/^} CopyOnePropertyData;$/;"	t	typeref:struct:CopyOnePropertyData	file:
DEFAULT_CATEGORY	SDL/src/SDL_log.c	/^#define DEFAULT_CATEGORY /;"	d	file:
ENDLINE	SDL/src/SDL_assert.c	/^#define ENDLINE /;"	d	file:
EnumerateOneProperty	SDL/src/SDL_properties.c	/^static bool SDLCALL EnumerateOneProperty(void *userdata, const SDL_HashTable *table, const void /;"	f	typeref:typename:bool SDLCALL	file:
EnumerateOnePropertyData	SDL/src/SDL_properties.c	/^typedef struct EnumerateOnePropertyData$/;"	s	file:
EnumerateOnePropertyData	SDL/src/SDL_properties.c	/^} EnumerateOnePropertyData;$/;"	t	typeref:struct:EnumerateOnePropertyData	file:
FreeOneProperties	SDL/src/SDL_properties.c	/^static bool SDLCALL FreeOneProperties(void *userdata, const SDL_HashTable *table, const void *ke/;"	f	typeref:typename:bool SDLCALL	file:
GetCategoryPrefix	SDL/src/SDL_log.c	/^static const char *GetCategoryPrefix(int category)$/;"	f	typeref:typename:const char *	file:
GetHintEnvironmentVariable	SDL/src/SDL_hints.c	/^static const char *GetHintEnvironmentVariable(const char *name)$/;"	f	typeref:typename:const char *	file:
GetHintProperties	SDL/src/SDL_hints.c	/^static SDL_PropertiesID GetHintProperties(bool create)$/;"	f	typeref:typename:SDL_PropertiesID	file:
GetLogPriorityPrefix	SDL/src/SDL_log.c	/^static const char *GetLogPriorityPrefix(SDL_LogPriority priority)$/;"	f	typeref:typename:const char *	file:
GetOneObject	SDL/src/SDL_utils.c	/^static bool SDLCALL GetOneObject(void *userdata, const SDL_HashTable *table, const void *object,/;"	f	typeref:typename:bool SDLCALL	file:
GetOneObjectData	SDL/src/SDL_utils.c	/^typedef struct GetOneObjectData$/;"	s	file:
GetOneObjectData	SDL/src/SDL_utils.c	/^} GetOneObjectData;$/;"	t	typeref:struct:GetOneObjectData	file:
HAVE_GCC_DIAGNOSTIC_PRAGMA	SDL/src/SDL_internal.h	/^#define HAVE_GCC_DIAGNOSTIC_PRAGMA /;"	d
LogOneLeakedObject	SDL/src/SDL_utils.c	/^static bool SDLCALL LogOneLeakedObject(void *userdata, const SDL_HashTable *table, const void *o/;"	f	typeref:typename:bool SDLCALL	file:
MAX_HASHITEM_SIZEOF	SDL/src/SDL_hashtable.c	/^#define MAX_HASHITEM_SIZEOF /;"	d	file:
MAX_HASHTABLE_SIZE	SDL/src/SDL_hashtable.c	/^#define MAX_HASHTABLE_SIZE /;"	d	file:
O_CLOEXEC	SDL/src/SDL_internal.h	/^#define O_CLOEXEC /;"	d
POP_SDL_ERROR	SDL/src/SDL_internal.h	/^#define POP_SDL_ERROR(/;"	d
PUSH_SDL_ERROR	SDL/src/SDL_internal.h	/^#define PUSH_SDL_ERROR(/;"	d
ParseLogCategory	SDL/src/SDL_log.c	/^static bool ParseLogCategory(const char *string, size_t length, int *category)$/;"	f	typeref:typename:bool	file:
ParseLogPriorities	SDL/src/SDL_log.c	/^static void ParseLogPriorities(const char *hint)$/;"	f	typeref:typename:void	file:
ParseLogPriority	SDL/src/SDL_log.c	/^static bool ParseLogPriority(const char *string, size_t length, SDL_LogPriority *priority)$/;"	f	typeref:typename:bool	file:
PrefixMatch	SDL/src/SDL_utils.c	/^static int PrefixMatch(const char *a, const char *b)$/;"	f	typeref:typename:int	file:
ResetHintsCallback	SDL/src/SDL_hints.c	/^static void SDLCALL ResetHintsCallback(void *userdata, SDL_PropertiesID hints, const char *name)$/;"	f	typeref:typename:void SDLCALL	file:
SDLOBJTYPECASE	SDL/src/SDL_utils.c	/^        #define SDLOBJTYPECASE(/;"	d	file:
SDL_AbortAssertion	SDL/src/SDL_assert.c	/^static SDL_NORETURN void SDL_AbortAssertion(void)$/;"	f	typeref:typename:SDL_NORETURN void	file:
SDL_AddAssertionToReport	SDL/src/SDL_assert.c	/^static void SDL_AddAssertionToReport(SDL_AssertData *data)$/;"	f	typeref:typename:void	file:
SDL_AddHintCallback	SDL/src/SDL_hints.c	/^bool SDL_AddHintCallback(const char *name, SDL_HintCallback callback, void *userdata)$/;"	f	typeref:typename:bool
SDL_AssertionsQuit	SDL/src/SDL_assert.c	/^void SDL_AssertionsQuit(void)$/;"	f	typeref:typename:void
SDL_BeginThreadFunction	SDL/src/SDL_internal.h	/^#define SDL_BeginThreadFunction /;"	d
SDL_CalculateFraction	SDL/src/SDL_utils.c	/^void SDL_CalculateFraction(float x, int *numerator, int *denominator)$/;"	f	typeref:typename:void
SDL_CalculateGCD	SDL/src/SDL_utils.c	/^Uint32 SDL_CalculateGCD(Uint32 a, Uint32 b)$/;"	f	typeref:typename:Uint32
SDL_CheckInitLog	SDL/src/SDL_log.c	/^static void SDL_CheckInitLog(void)$/;"	f	typeref:typename:void	file:
SDL_CheckInitProperties	SDL/src/SDL_properties.c	/^static bool SDL_CheckInitProperties(void)$/;"	f	typeref:typename:bool	file:
SDL_ClearError	SDL/src/SDL_error.c	/^bool SDL_ClearError(void)$/;"	f	typeref:typename:bool
SDL_ClearHashTable	SDL/src/SDL_hashtable.c	/^void SDL_ClearHashTable(SDL_HashTable *table)$/;"	f	typeref:typename:void
SDL_ClearProperty	SDL/src/SDL_properties.c	/^bool SDL_ClearProperty(SDL_PropertiesID props, const char *name)$/;"	f	typeref:typename:bool
SDL_CopyProperties	SDL/src/SDL_properties.c	/^bool SDL_CopyProperties(SDL_PropertiesID src, SDL_PropertiesID dst)$/;"	f	typeref:typename:bool
SDL_CreateDeviceName	SDL/src/SDL_utils.c	/^char *SDL_CreateDeviceName(Uint16 vendor, Uint16 product, const char *vendor_name, const char *p/;"	f	typeref:typename:char *
SDL_CreateHashTable	SDL/src/SDL_hashtable.c	/^SDL_HashTable *SDL_CreateHashTable(int estimated_capacity, bool threadsafe, SDL_HashCallback has/;"	f	typeref:typename:SDL_HashTable *
SDL_CreateProperties	SDL/src/SDL_properties.c	/^SDL_PropertiesID SDL_CreateProperties(void)$/;"	f	typeref:typename:SDL_PropertiesID
SDL_DEBUG_LOG_INTRO	SDL/src/SDL_utils.c	/^#define SDL_DEBUG_LOG_INTRO /;"	d	file:
SDL_DECLSPEC	SDL/src/SDL_internal.h	/^#define SDL_DECLSPEC$/;"	d
SDL_DebugLogBackend	SDL/src/SDL_utils.c	/^void SDL_DebugLogBackend(const char *subsystem, const char *backend)$/;"	f	typeref:typename:void
SDL_DecrementSubsystemRefCount	SDL/src/SDL.c	/^static void SDL_DecrementSubsystemRefCount(Uint32 subsystem)$/;"	f	typeref:typename:void	file:
SDL_DestroyHashKey	SDL/src/SDL_hashtable.c	/^void SDL_DestroyHashKey(void *unused, const void *key, const void *value)$/;"	f	typeref:typename:void
SDL_DestroyHashKeyAndValue	SDL/src/SDL_hashtable.c	/^void SDL_DestroyHashKeyAndValue(void *unused, const void *key, const void *value)$/;"	f	typeref:typename:void
SDL_DestroyHashTable	SDL/src/SDL_hashtable.c	/^void SDL_DestroyHashTable(SDL_HashTable *table)$/;"	f	typeref:typename:void
SDL_DestroyHashValue	SDL/src/SDL_hashtable.c	/^void SDL_DestroyHashValue(void *unused, const void *key, const void *value)$/;"	f	typeref:typename:void
SDL_DestroyProperties	SDL/src/SDL_properties.c	/^void SDL_DestroyProperties(SDL_PropertiesID props)$/;"	f	typeref:typename:void
SDL_DetectSandbox	SDL/src/SDL.c	/^static SDL_Sandbox SDL_DetectSandbox(void)$/;"	f	typeref:typename:SDL_Sandbox	file:
SDL_DumpProperties	SDL/src/SDL_properties.c	/^bool SDL_DumpProperties(SDL_PropertiesID props)$/;"	f	typeref:typename:bool
SDL_DumpPropertiesCallback	SDL/src/SDL_properties.c	/^static void SDLCALL SDL_DumpPropertiesCallback(void *userdata, SDL_PropertiesID props, const cha/;"	f	typeref:typename:void SDLCALL	file:
SDL_EndThreadFunction	SDL/src/SDL_internal.h	/^#define SDL_EndThreadFunction /;"	d
SDL_EnumerateProperties	SDL/src/SDL_properties.c	/^bool SDL_EnumerateProperties(SDL_PropertiesID props, SDL_EnumeratePropertiesCallback callback, v/;"	f	typeref:typename:bool
SDL_ErrorCode	SDL/src/SDL_error_c.h	/^} SDL_ErrorCode;$/;"	t	typeref:enum:__anond5e685520103
SDL_ErrorCodeGeneric	SDL/src/SDL_error_c.h	/^    SDL_ErrorCodeGeneric,$/;"	e	enum:__anond5e685520103
SDL_ErrorCodeNone	SDL/src/SDL_error_c.h	/^    SDL_ErrorCodeNone,$/;"	e	enum:__anond5e685520103
SDL_ErrorCodeOutOfMemory	SDL/src/SDL_error_c.h	/^    SDL_ErrorCodeOutOfMemory,$/;"	e	enum:__anond5e685520103
SDL_ExitProcess	SDL/src/SDL.c	/^SDL_NORETURN void SDL_ExitProcess(int exitcode)$/;"	f	typeref:typename:SDL_NORETURN void
SDL_FindInHashTable	SDL/src/SDL_hashtable.c	/^bool SDL_FindInHashTable(const SDL_HashTable *table, const void *key, const void **value)$/;"	f	typeref:typename:bool
SDL_FreePersistentStrings	SDL/src/SDL_utils.c	/^static void SDL_FreePersistentStrings( void *value )$/;"	f	typeref:typename:void	file:
SDL_FreeProperties	SDL/src/SDL_properties.c	/^static void SDL_FreeProperties(SDL_Properties *properties)$/;"	f	typeref:typename:void	file:
SDL_FreeProperty	SDL/src/SDL_properties.c	/^static void SDLCALL SDL_FreeProperty(void *data, const void *key, const void *value)$/;"	f	typeref:typename:void SDLCALL	file:
SDL_FreePropertyWithCleanup	SDL/src/SDL_properties.c	/^static void SDL_FreePropertyWithCleanup(const void *key, const void *value, void *data, bool cle/;"	f	typeref:typename:void	file:
SDL_GUIDToString	SDL/src/SDL_guid.c	/^void SDL_GUIDToString(SDL_GUID guid, char *pszGUID, int cbGUID)$/;"	f	typeref:typename:void
SDL_GenerateAssertionReport	SDL/src/SDL_assert.c	/^static void SDL_GenerateAssertionReport(void)$/;"	f	typeref:typename:void	file:
SDL_GetAppMetadataProperty	SDL/src/SDL.c	/^const char *SDL_GetAppMetadataProperty(const char *name)$/;"	f	typeref:typename:const char *
SDL_GetAssertionHandler	SDL/src/SDL_assert.c	/^SDL_AssertionHandler SDL_GetAssertionHandler(void **userdata)$/;"	f	typeref:typename:SDL_AssertionHandler
SDL_GetAssertionReport	SDL/src/SDL_assert.c	/^const SDL_AssertData *SDL_GetAssertionReport(void)$/;"	f	typeref:typename:const SDL_AssertData *
SDL_GetBooleanProperty	SDL/src/SDL_properties.c	/^bool SDL_GetBooleanProperty(SDL_PropertiesID props, const char *name, bool default_value)$/;"	f	typeref:typename:bool
SDL_GetDefaultAssertionHandler	SDL/src/SDL_assert.c	/^SDL_AssertionHandler SDL_GetDefaultAssertionHandler(void)$/;"	f	typeref:typename:SDL_AssertionHandler
SDL_GetDefaultLogOutputFunction	SDL/src/SDL_log.c	/^SDL_LogOutputFunction SDL_GetDefaultLogOutputFunction(void)$/;"	f	typeref:typename:SDL_LogOutputFunction
SDL_GetError	SDL/src/SDL_error.c	/^const char *SDL_GetError(void)$/;"	f	typeref:typename:const char *
SDL_GetFloatProperty	SDL/src/SDL_properties.c	/^float SDL_GetFloatProperty(SDL_PropertiesID props, const char *name, float default_value)$/;"	f	typeref:typename:float
SDL_GetGlobalProperties	SDL/src/SDL_properties.c	/^SDL_PropertiesID SDL_GetGlobalProperties(void)$/;"	f	typeref:typename:SDL_PropertiesID
SDL_GetHint	SDL/src/SDL_hints.c	/^const char *SDL_GetHint(const char *name)$/;"	f	typeref:typename:const char *
SDL_GetHintBoolean	SDL/src/SDL_hints.c	/^bool SDL_GetHintBoolean(const char *name, bool default_value)$/;"	f	typeref:typename:bool
SDL_GetLogOutputFunction	SDL/src/SDL_log.c	/^void SDL_GetLogOutputFunction(SDL_LogOutputFunction *callback, void **userdata)$/;"	f	typeref:typename:void
SDL_GetLogPriority	SDL/src/SDL_log.c	/^SDL_LogPriority SDL_GetLogPriority(int category)$/;"	f	typeref:typename:SDL_LogPriority
SDL_GetNextObjectID	SDL/src/SDL_utils.c	/^Uint32 SDL_GetNextObjectID(void)$/;"	f	typeref:typename:Uint32
SDL_GetNumberProperty	SDL/src/SDL_properties.c	/^Sint64 SDL_GetNumberProperty(SDL_PropertiesID props, const char *name, Sint64 default_value)$/;"	f	typeref:typename:Sint64
SDL_GetObjects	SDL/src/SDL_utils.c	/^int SDL_GetObjects(SDL_ObjectType type, void **objects, int count)$/;"	f	typeref:typename:int
SDL_GetPersistentString	SDL/src/SDL_utils.c	/^const char *SDL_GetPersistentString(const char *string)$/;"	f	typeref:typename:const char *
SDL_GetPlatform	SDL/src/SDL.c	/^const char *SDL_GetPlatform(void)$/;"	f	typeref:typename:const char *
SDL_GetPointerProperty	SDL/src/SDL_properties.c	/^void *SDL_GetPointerProperty(SDL_PropertiesID props, const char *name, void *default_value)$/;"	f	typeref:typename:void *
SDL_GetPropertyType	SDL/src/SDL_properties.c	/^SDL_PropertyType SDL_GetPropertyType(SDL_PropertiesID props, const char *name)$/;"	f	typeref:typename:SDL_PropertyType
SDL_GetRevision	SDL/src/SDL.c	/^const char *SDL_GetRevision(void)$/;"	f	typeref:typename:const char *
SDL_GetSandbox	SDL/src/SDL.c	/^SDL_Sandbox SDL_GetSandbox(void)$/;"	f	typeref:typename:SDL_Sandbox
SDL_GetStringBoolean	SDL/src/SDL_hints.c	/^bool SDL_GetStringBoolean(const char *value, bool default_value)$/;"	f	typeref:typename:bool
SDL_GetStringInteger	SDL/src/SDL_hints.c	/^int SDL_GetStringInteger(const char *value, int default_value)$/;"	f	typeref:typename:int
SDL_GetStringProperty	SDL/src/SDL_properties.c	/^const char *SDL_GetStringProperty(SDL_PropertiesID props, const char *name, const char *default_/;"	f	typeref:typename:const char *
SDL_GetVersion	SDL/src/SDL.c	/^int SDL_GetVersion(void)$/;"	f	typeref:typename:int
SDL_HAVE_BLIT_0	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_0 /;"	d
SDL_HAVE_BLIT_1	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_1 /;"	d
SDL_HAVE_BLIT_A	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_A /;"	d
SDL_HAVE_BLIT_AUTO	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_AUTO /;"	d
SDL_HAVE_BLIT_N	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_N /;"	d
SDL_HAVE_BLIT_N_RGB565	SDL/src/SDL_internal.h	/^#define SDL_HAVE_BLIT_N_RGB565 /;"	d
SDL_HAVE_RLE	SDL/src/SDL_internal.h	/^#define SDL_HAVE_RLE /;"	d
SDL_HAVE_STB	SDL/src/SDL_internal.h	/^#define SDL_HAVE_STB /;"	d
SDL_HAVE_YUV	SDL/src/SDL_internal.h	/^#define SDL_HAVE_YUV /;"	d
SDL_HasProperty	SDL/src/SDL_properties.c	/^bool SDL_HasProperty(SDL_PropertiesID props, const char *name)$/;"	f	typeref:typename:bool
SDL_HashCallback	SDL/src/SDL_hashtable.h	/^typedef Uint32 (SDLCALL *SDL_HashCallback)(void *userdata, const void *key);$/;"	t	typeref:typename:Uint32 (SDLCALL *)(void * userdata,const void * key)
SDL_HashDestroyCallback	SDL/src/SDL_hashtable.h	/^typedef void (SDLCALL *SDL_HashDestroyCallback)(void *userdata, const void *key, const void *val/;"	t	typeref:typename:void (SDLCALL *)(void * userdata,const void * key,const void * value)
SDL_HashID	SDL/src/SDL_hashtable.c	/^Uint32 SDL_HashID(void *unused, const void *key)$/;"	f	typeref:typename:Uint32
SDL_HashItem	SDL/src/SDL_hashtable.c	/^typedef struct SDL_HashItem$/;"	s	file:
SDL_HashItem	SDL/src/SDL_hashtable.c	/^} SDL_HashItem;$/;"	t	typeref:struct:SDL_HashItem	file:
SDL_HashKeyMatchCallback	SDL/src/SDL_hashtable.h	/^typedef bool (SDLCALL *SDL_HashKeyMatchCallback)(void *userdata, const void *a, const void *b);$/;"	t	typeref:typename:bool (SDLCALL *)(void * userdata,const void * a,const void * b)
SDL_HashObject	SDL/src/SDL_utils.c	/^static Uint32 SDLCALL SDL_HashObject(void *unused, const void *key)$/;"	f	typeref:typename:Uint32 SDLCALL	file:
SDL_HashPointer	SDL/src/SDL_hashtable.c	/^Uint32 SDL_HashPointer(void *unused, const void *key)$/;"	f	typeref:typename:Uint32
SDL_HashString	SDL/src/SDL_hashtable.c	/^Uint32 SDL_HashString(void *unused, const void *key)$/;"	f	typeref:typename:Uint32
SDL_HashTable	SDL/src/SDL_hashtable.c	/^struct SDL_HashTable$/;"	s	file:
SDL_HashTable	SDL/src/SDL_hashtable.h	/^typedef struct SDL_HashTable SDL_HashTable;$/;"	t	typeref:struct:SDL_HashTable
SDL_HashTableEmpty	SDL/src/SDL_hashtable.c	/^bool SDL_HashTableEmpty(SDL_HashTable *table)$/;"	f	typeref:typename:bool
SDL_HashTableIterateCallback	SDL/src/SDL_hashtable.h	/^typedef bool (SDLCALL *SDL_HashTableIterateCallback)(void *userdata, const SDL_HashTable *table,/;"	t	typeref:typename:bool (SDLCALL *)(void * userdata,const SDL_HashTable * table,const void * key,const void * value)
SDL_Hint	SDL/src/SDL_hints.c	/^typedef struct SDL_Hint$/;"	s	file:
SDL_Hint	SDL/src/SDL_hints.c	/^} SDL_Hint;$/;"	t	typeref:struct:SDL_Hint	file:
SDL_HintWatch	SDL/src/SDL_hints.c	/^typedef struct SDL_HintWatch$/;"	s	file:
SDL_HintWatch	SDL/src/SDL_hints.c	/^} SDL_HintWatch;$/;"	t	typeref:struct:SDL_HintWatch	file:
SDL_INIT_EVERYTHING	SDL/src/SDL.c	/^#define SDL_INIT_EVERYTHING /;"	d	file:
SDL_INTERNAL	SDL/src/SDL_internal.h	/^#define SDL_INTERNAL$/;"	d
SDL_IncrementSubsystemRefCount	SDL/src/SDL.c	/^static void SDL_IncrementSubsystemRefCount(Uint32 subsystem)$/;"	f	typeref:typename:void	file:
SDL_Init	SDL/src/SDL.c	/^bool SDL_Init(SDL_InitFlags flags)$/;"	f	typeref:typename:bool
SDL_InitHints	SDL/src/SDL_hints.c	/^void SDL_InitHints(void)$/;"	f	typeref:typename:void
SDL_InitLog	SDL/src/SDL_log.c	/^void SDL_InitLog(void)$/;"	f	typeref:typename:void
SDL_InitMainThread	SDL/src/SDL.c	/^void SDL_InitMainThread(void)$/;"	f	typeref:typename:void
SDL_InitOrIncrementSubsystem	SDL/src/SDL.c	/^static bool SDL_InitOrIncrementSubsystem(Uint32 subsystem)$/;"	f	typeref:typename:bool	file:
SDL_InitProperties	SDL/src/SDL_properties.c	/^bool SDL_InitProperties(void)$/;"	f	typeref:typename:bool
SDL_InitSubSystem	SDL/src/SDL.c	/^bool SDL_InitSubSystem(SDL_InitFlags flags)$/;"	f	typeref:typename:bool
SDL_InsertIntoHashTable	SDL/src/SDL_hashtable.c	/^bool SDL_InsertIntoHashTable(SDL_HashTable *table, const void *key, const void *value, bool repl/;"	f	typeref:typename:bool
SDL_IsMainThread	SDL/src/SDL.c	/^bool SDL_IsMainThread(void)$/;"	f	typeref:typename:bool
SDL_IsTV	SDL/src/SDL.c	/^bool SDL_IsTV(void)$/;"	f	typeref:typename:bool
SDL_IsTablet	SDL/src/SDL.c	/^bool SDL_IsTablet(void)$/;"	f	typeref:typename:bool
SDL_IterateHashTable	SDL/src/SDL_hashtable.c	/^bool SDL_IterateHashTable(const SDL_HashTable *table, SDL_HashTableIterateCallback callback, voi/;"	f	typeref:typename:bool
SDL_KeyMatchID	SDL/src/SDL_hashtable.c	/^bool SDL_KeyMatchID(void *unused, const void *a, const void *b)$/;"	f	typeref:typename:bool
SDL_KeyMatchObject	SDL/src/SDL_utils.c	/^static bool SDL_KeyMatchObject(void *unused, const void *a, const void *b)$/;"	f	typeref:typename:bool	file:
SDL_KeyMatchPointer	SDL/src/SDL_hashtable.c	/^bool SDL_KeyMatchPointer(void *unused, const void *a, const void *b)$/;"	f	typeref:typename:bool
SDL_KeyMatchString	SDL/src/SDL_hashtable.c	/^bool SDL_KeyMatchString(void *unused, const void *a, const void *b)$/;"	f	typeref:typename:bool
SDL_ListAdd	SDL/src/SDL_list.c	/^bool SDL_ListAdd(SDL_ListNode **head, void *ent)$/;"	f	typeref:typename:bool
SDL_ListClear	SDL/src/SDL_list.c	/^void SDL_ListClear(SDL_ListNode **head)$/;"	f	typeref:typename:void
SDL_ListNode	SDL/src/SDL_list.h	/^typedef struct SDL_ListNode$/;"	s
SDL_ListNode	SDL/src/SDL_list.h	/^} SDL_ListNode;$/;"	t	typeref:struct:SDL_ListNode
SDL_ListPop	SDL/src/SDL_list.c	/^void SDL_ListPop(SDL_ListNode **head, void **ent)$/;"	f	typeref:typename:void
SDL_ListRemove	SDL/src/SDL_list.c	/^void SDL_ListRemove(SDL_ListNode **head, void *ent)$/;"	f	typeref:typename:void
SDL_LockProperties	SDL/src/SDL_properties.c	/^bool SDL_LockProperties(SDL_PropertiesID props)$/;"	f	typeref:typename:bool
SDL_Log	SDL/src/SDL_log.c	/^void SDL_Log(SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogCritical	SDL/src/SDL_log.c	/^void SDL_LogCritical(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogDebug	SDL/src/SDL_log.c	/^void SDL_LogDebug(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogError	SDL/src/SDL_log.c	/^void SDL_LogError(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogInfo	SDL/src/SDL_log.c	/^void SDL_LogInfo(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogLevel	SDL/src/SDL_log.c	/^typedef struct SDL_LogLevel$/;"	s	file:
SDL_LogLevel	SDL/src/SDL_log.c	/^} SDL_LogLevel;$/;"	t	typeref:struct:SDL_LogLevel	file:
SDL_LogMessage	SDL/src/SDL_log.c	/^void SDL_LogMessage(int category, SDL_LogPriority priority, SDL_PRINTF_FORMAT_STRING const char /;"	f	typeref:typename:void
SDL_LogMessageV	SDL/src/SDL_log.c	/^void SDL_LogMessageV(int category, SDL_LogPriority priority, SDL_PRINTF_FORMAT_STRING const char/;"	f	typeref:typename:void
SDL_LogOutput	SDL/src/SDL_log.c	/^static void SDLCALL SDL_LogOutput(void *userdata, int category, SDL_LogPriority priority,$/;"	f	typeref:typename:void SDLCALL	file:
SDL_LogTrace	SDL/src/SDL_log.c	/^void SDL_LogTrace(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogVerbose	SDL/src/SDL_log.c	/^void SDL_LogVerbose(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LogWarn	SDL/src/SDL_log.c	/^void SDL_LogWarn(int category, SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:void
SDL_LoggingChanged	SDL/src/SDL_log.c	/^static void SDLCALL SDL_LoggingChanged(void *userdata, const char *name, const char *oldValue, c/;"	f	typeref:typename:void SDLCALL	file:
SDL_MAIN_NOIMPL	SDL/src/SDL_internal.h	/^#define SDL_MAIN_NOIMPL /;"	d
SDL_MAX_ASSERT_MESSAGE_STACK	SDL/src/SDL_assert.c	/^#define SDL_MAX_ASSERT_MESSAGE_STACK /;"	d	file:
SDL_MAX_LOG_MESSAGE_STACK	SDL/src/SDL_log.c	/^#define SDL_MAX_LOG_MESSAGE_STACK /;"	d	file:
SDL_MAX_SMALL_ALLOC_STACKSIZE	SDL/src/SDL_internal.h	/^#define SDL_MAX_SMALL_ALLOC_STACKSIZE /;"	d
SDL_MainIsReady	SDL/src/SDL.c	/^static bool SDL_MainIsReady = false;$/;"	v	typeref:typename:bool	file:
SDL_MainIsReady	SDL/src/SDL.c	/^static bool SDL_MainIsReady = true;$/;"	v	typeref:typename:bool	file:
SDL_MainThreadID	SDL/src/SDL.c	/^static SDL_ThreadID SDL_MainThreadID = 0;$/;"	v	typeref:typename:SDL_ThreadID	file:
SDL_OBJECT_TYPE_GAMEPAD	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_GAMEPAD,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_HAPTIC	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_HAPTIC,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_HIDAPI_DEVICE	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_HIDAPI_DEVICE,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_HIDAPI_JOYSTICK	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_HIDAPI_JOYSTICK,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_JOYSTICK	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_JOYSTICK,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_RENDERER	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_RENDERER,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_SENSOR	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_SENSOR,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_TEXTURE	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_TEXTURE,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_THREAD	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_THREAD,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_TRAY	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_TRAY,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_UNKNOWN	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_UNKNOWN,$/;"	e	enum:__anon3a77baf90103
SDL_OBJECT_TYPE_WINDOW	SDL/src/SDL_utils_c.h	/^    SDL_OBJECT_TYPE_WINDOW,$/;"	e	enum:__anon3a77baf90103
SDL_ObjectType	SDL/src/SDL_utils_c.h	/^} SDL_ObjectType;$/;"	t	typeref:enum:__anon3a77baf90103
SDL_ObjectValid	SDL/src/SDL_utils.c	/^bool SDL_ObjectValid(void *object, SDL_ObjectType type)$/;"	f	typeref:typename:bool
SDL_OutOfMemory	SDL/src/SDL_error.c	/^bool SDL_OutOfMemory(void)$/;"	f	typeref:typename:bool
SDL_PopError	SDL/src/SDL_error_c.h	/^#define SDL_PopError(/;"	d
SDL_PrivateSetProperty	SDL/src/SDL_properties.c	/^static bool SDL_PrivateSetProperty(SDL_PropertiesID props, const char *name, SDL_Property *prope/;"	f	typeref:typename:bool	file:
SDL_PromptAssertion	SDL/src/SDL_assert.c	/^static SDL_AssertState SDLCALL SDL_PromptAssertion(const SDL_AssertData *data, void *userdata)$/;"	f	typeref:typename:SDL_AssertState SDLCALL	file:
SDL_Properties	SDL/src/SDL_properties.c	/^} SDL_Properties;$/;"	t	typeref:struct:__anon8321728e0308	file:
SDL_Property	SDL/src/SDL_properties.c	/^} SDL_Property;$/;"	t	typeref:struct:__anon8321728e0108	file:
SDL_PushError	SDL/src/SDL_error_c.h	/^#define SDL_PushError(/;"	d
SDL_Quit	SDL/src/SDL.c	/^void SDL_Quit(void)$/;"	f	typeref:typename:void
SDL_QuitHints	SDL/src/SDL_hints.c	/^void SDL_QuitHints(void)$/;"	f	typeref:typename:void
SDL_QuitLog	SDL/src/SDL_log.c	/^void SDL_QuitLog(void)$/;"	f	typeref:typename:void
SDL_QuitMainThread	SDL/src/SDL.c	/^static void SDL_QuitMainThread(void)$/;"	f	typeref:typename:void	file:
SDL_QuitProperties	SDL/src/SDL_properties.c	/^void SDL_QuitProperties(void)$/;"	f	typeref:typename:void
SDL_QuitSubSystem	SDL/src/SDL.c	/^void SDL_QuitSubSystem(SDL_InitFlags flags)$/;"	f	typeref:typename:void
SDL_RemoveFromHashTable	SDL/src/SDL_hashtable.c	/^bool SDL_RemoveFromHashTable(SDL_HashTable *table, const void *key)$/;"	f	typeref:typename:bool
SDL_RemoveHintCallback	SDL/src/SDL_hints.c	/^void SDL_RemoveHintCallback(const char *name, SDL_HintCallback callback, void *userdata)$/;"	f	typeref:typename:void
SDL_RenderAssertMessage	SDL/src/SDL_assert.c	/^static int SDL_RenderAssertMessage(char *buf, size_t buf_len, const SDL_AssertData *data)$/;"	f	typeref:typename:int	file:
SDL_ReportAssertion	SDL/src/SDL_assert.c	/^SDL_AssertState SDL_ReportAssertion(SDL_AssertData *data, const char *func, const char *file, in/;"	f	typeref:typename:SDL_AssertState
SDL_ResetAssertionReport	SDL/src/SDL_assert.c	/^void SDL_ResetAssertionReport(void)$/;"	f	typeref:typename:void
SDL_ResetHint	SDL/src/SDL_hints.c	/^bool SDL_ResetHint(const char *name)$/;"	f	typeref:typename:bool
SDL_ResetHints	SDL/src/SDL_hints.c	/^void SDL_ResetHints(void)$/;"	f	typeref:typename:void
SDL_ResetLogPriorities	SDL/src/SDL_log.c	/^void SDL_ResetLogPriorities(void)$/;"	f	typeref:typename:void
SDL_SetAppMetadata	SDL/src/SDL.c	/^bool SDL_SetAppMetadata(const char *appname, const char *appversion, const char *appidentifier)$/;"	f	typeref:typename:bool
SDL_SetAppMetadataProperty	SDL/src/SDL.c	/^bool SDL_SetAppMetadataProperty(const char *name, const char *value)$/;"	f	typeref:typename:bool
SDL_SetAssertionHandler	SDL/src/SDL_assert.c	/^void SDL_SetAssertionHandler(SDL_AssertionHandler handler, void *userdata)$/;"	f	typeref:typename:void
SDL_SetBooleanProperty	SDL/src/SDL_properties.c	/^bool SDL_SetBooleanProperty(SDL_PropertiesID props, const char *name, bool value)$/;"	f	typeref:typename:bool
SDL_SetError	SDL/src/SDL_error.c	/^bool SDL_SetError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...)$/;"	f	typeref:typename:bool
SDL_SetErrorV	SDL/src/SDL_error.c	/^bool SDL_SetErrorV(SDL_PRINTF_FORMAT_STRING const char *fmt, va_list ap)$/;"	f	typeref:typename:bool
SDL_SetFloatProperty	SDL/src/SDL_properties.c	/^bool SDL_SetFloatProperty(SDL_PropertiesID props, const char *name, float value)$/;"	f	typeref:typename:bool
SDL_SetFreeableProperty	SDL/src/SDL_properties.c	/^bool SDL_SetFreeableProperty(SDL_PropertiesID props, const char *name, void *value)$/;"	f	typeref:typename:bool
SDL_SetHint	SDL/src/SDL_hints.c	/^bool SDL_SetHint(const char *name, const char *value)$/;"	f	typeref:typename:bool
SDL_SetHintWithPriority	SDL/src/SDL_hints.c	/^bool SDL_SetHintWithPriority(const char *name, const char *value, SDL_HintPriority priority)$/;"	f	typeref:typename:bool
SDL_SetLogOutputFunction	SDL/src/SDL_log.c	/^void SDL_SetLogOutputFunction(SDL_LogOutputFunction callback, void *userdata)$/;"	f	typeref:typename:void
SDL_SetLogPriorities	SDL/src/SDL_log.c	/^void SDL_SetLogPriorities(SDL_LogPriority priority)$/;"	f	typeref:typename:void
SDL_SetLogPriority	SDL/src/SDL_log.c	/^void SDL_SetLogPriority(int category, SDL_LogPriority priority)$/;"	f	typeref:typename:void
SDL_SetLogPriorityPrefix	SDL/src/SDL_log.c	/^bool SDL_SetLogPriorityPrefix(SDL_LogPriority priority, const char *prefix)$/;"	f	typeref:typename:bool
SDL_SetMainReady	SDL/src/SDL.c	/^void SDL_SetMainReady(void)$/;"	f	typeref:typename:void
SDL_SetNumberProperty	SDL/src/SDL_properties.c	/^bool SDL_SetNumberProperty(SDL_PropertiesID props, const char *name, Sint64 value)$/;"	f	typeref:typename:bool
SDL_SetObjectValid	SDL/src/SDL_utils.c	/^void SDL_SetObjectValid(void *object, SDL_ObjectType type, bool valid)$/;"	f	typeref:typename:void
SDL_SetObjectsInvalid	SDL/src/SDL_utils.c	/^void SDL_SetObjectsInvalid(void)$/;"	f	typeref:typename:void
SDL_SetPointerProperty	SDL/src/SDL_properties.c	/^bool SDL_SetPointerProperty(SDL_PropertiesID props, const char *name, void *value)$/;"	f	typeref:typename:bool
SDL_SetPointerPropertyWithCleanup	SDL/src/SDL_properties.c	/^bool SDL_SetPointerPropertyWithCleanup(SDL_PropertiesID props, const char *name, void *value, SD/;"	f	typeref:typename:bool
SDL_SetStringProperty	SDL/src/SDL_properties.c	/^bool SDL_SetStringProperty(SDL_PropertiesID props, const char *name, const char *value)$/;"	f	typeref:typename:bool
SDL_SetSurfaceProperty	SDL/src/SDL_properties.c	/^bool SDL_SetSurfaceProperty(SDL_PropertiesID props, const char *name, SDL_Surface *surface)$/;"	f	typeref:typename:bool
SDL_ShouldInitSubsystem	SDL/src/SDL.c	/^static bool SDL_ShouldInitSubsystem(Uint32 subsystem)$/;"	f	typeref:typename:bool	file:
SDL_ShouldQuitSubsystem	SDL/src/SDL.c	/^static bool SDL_ShouldQuitSubsystem(Uint32 subsystem)$/;"	f	typeref:typename:bool	file:
SDL_StringToGUID	SDL/src/SDL_guid.c	/^SDL_GUID SDL_StringToGUID(const char *pchGUID)$/;"	f	typeref:typename:SDL_GUID
SDL_SubsystemRefCount	SDL/src/SDL.c	/^static Uint8 SDL_SubsystemRefCount[32];$/;"	v	typeref:typename:Uint8[32]	file:
SDL_URIDecode	SDL/src/SDL_utils.c	/^static int SDL_URIDecode(const char *src, char *dst, int len)$/;"	f	typeref:typename:int	file:
SDL_URIToLocal	SDL/src/SDL_utils.c	/^int SDL_URIToLocal(const char *src, char *dst)$/;"	f	typeref:typename:int
SDL_UnlockProperties	SDL/src/SDL_properties.c	/^void SDL_UnlockProperties(SDL_PropertiesID props)$/;"	f	typeref:typename:void
SDL_VARIABLE_LENGTH_ARRAY	SDL/src/SDL_internal.h	/^#define SDL_VARIABLE_LENGTH_ARRAY /;"	d
SDL_VARIABLE_LENGTH_ARRAY	SDL/src/SDL_internal.h	/^#define SDL_VARIABLE_LENGTH_ARRAY$/;"	d
SDL_VIDEO_RENDER_SW	SDL/src/SDL_internal.h	/^#define SDL_VIDEO_RENDER_SW /;"	d
SDL_ValidMetadataProperty	SDL/src/SDL.c	/^static bool SDL_ValidMetadataProperty(const char *name)$/;"	f	typeref:typename:bool	file:
SDL_WasInit	SDL/src/SDL.c	/^Uint32 SDL_WasInit(SDL_InitFlags flags)$/;"	f	typeref:typename:Uint32
SDL_android_priority	SDL/src/SDL_log.c	/^static int SDL_android_priority[] = {$/;"	v	typeref:typename:int[]	file:
SDL_assert_c_h_	SDL/src/SDL_assert_c.h	/^#define SDL_assert_c_h_$/;"	d
SDL_bInMainQuit	SDL/src/SDL.c	/^static bool SDL_bInMainQuit = false;$/;"	v	typeref:typename:bool	file:
SDL_category_names	SDL/src/SDL_log.c	/^static const char * const SDL_category_names[] = {$/;"	v	typeref:typename:const char * const[]	file:
SDL_endswith	SDL/src/SDL_utils.c	/^bool SDL_endswith(const char *string, const char *suffix)$/;"	f	typeref:typename:bool
SDL_error	SDL/src/SDL_error_c.h	/^typedef struct SDL_error$/;"	s
SDL_error	SDL/src/SDL_error_c.h	/^} SDL_error;$/;"	t	typeref:struct:SDL_error
SDL_error_c_h_	SDL/src/SDL_error_c.h	/^#define SDL_error_c_h_$/;"	d
SDL_global_properties	SDL/src/SDL_properties.c	/^static SDL_AtomicU32 SDL_global_properties;$/;"	v	typeref:typename:SDL_AtomicU32	file:
SDL_hashtable_h_	SDL/src/SDL_hashtable.h	/^#define SDL_hashtable_h_$/;"	d
SDL_hint_props	SDL/src/SDL_hints.c	/^static SDL_AtomicU32 SDL_hint_props;$/;"	v	typeref:typename:SDL_AtomicU32	file:
SDL_hints_c_h_	SDL/src/SDL_hints_c.h	/^#define SDL_hints_c_h_$/;"	d
SDL_internal_h_	SDL/src/SDL_internal.h	/^#define SDL_internal_h_$/;"	d
SDL_last_properties_id	SDL/src/SDL_properties.c	/^static SDL_AtomicU32 SDL_last_properties_id;$/;"	v	typeref:typename:SDL_AtomicU32	file:
SDL_list_h_	SDL/src/SDL_list.h	/^#define SDL_list_h_$/;"	d
SDL_log_c_h_	SDL/src/SDL_log_c.h	/^#define SDL_log_c_h_$/;"	d
SDL_log_function_lock	SDL/src/SDL_log.c	/^static SDL_Mutex *SDL_log_function_lock;$/;"	v	typeref:typename:SDL_Mutex *	file:
SDL_log_init	SDL/src/SDL_log.c	/^static SDL_InitState SDL_log_init;$/;"	v	typeref:typename:SDL_InitState	file:
SDL_log_lock	SDL/src/SDL_log.c	/^static SDL_Mutex *SDL_log_lock;$/;"	v	typeref:typename:SDL_Mutex *	file:
SDL_objects	SDL/src/SDL_utils.c	/^static SDL_HashTable *SDL_objects;$/;"	v	typeref:typename:SDL_HashTable *	file:
SDL_objects_init	SDL/src/SDL_utils.c	/^static SDL_InitState SDL_objects_init;$/;"	v	typeref:typename:SDL_InitState	file:
SDL_powerof2	SDL/src/SDL_utils.c	/^int SDL_powerof2(int x)$/;"	f	typeref:typename:int
SDL_priority_names	SDL/src/SDL_log.c	/^static const char * const SDL_priority_names[] = {$/;"	v	typeref:typename:const char * const[]	file:
SDL_properties	SDL/src/SDL_properties.c	/^static SDL_HashTable *SDL_properties;$/;"	v	typeref:typename:SDL_HashTable *	file:
SDL_properties_init	SDL/src/SDL_properties.c	/^static SDL_InitState SDL_properties_init;$/;"	v	typeref:typename:SDL_InitState	file:
SDL_small_alloc	SDL/src/SDL_internal.h	/^#define SDL_small_alloc(/;"	d
SDL_small_free	SDL/src/SDL_internal.h	/^#define SDL_small_free(/;"	d
SDL_startswith	SDL/src/SDL_utils.c	/^bool SDL_startswith(const char *string, const char *prefix)$/;"	f	typeref:typename:bool
SDL_string_storage	SDL/src/SDL_utils.c	/^static SDL_TLSID SDL_string_storage;$/;"	v	typeref:typename:SDL_TLSID	file:
SDL_utils_h_	SDL/src/SDL_utils_c.h	/^#define SDL_utils_h_$/;"	d
WS_OVERLAPPEDWINDOW	SDL/src/SDL_assert.c	/^#define WS_OVERLAPPEDWINDOW /;"	d	file:
_DARWIN_C_SOURCE	SDL/src/SDL_internal.h	/^#define _DARWIN_C_SOURCE /;"	d
_DllMainCRTStartup	SDL/src/SDL.c	/^BOOL APIENTRY MINGW32_FORCEALIGN _DllMainCRTStartup(HANDLE hModule, DWORD ul_reason_for_call, LP/;"	f	typeref:typename:BOOL APIENTRY MINGW32_FORCEALIGN
_GNU_SOURCE	SDL/src/SDL_internal.h	/^#define _GNU_SOURCE$/;"	d
_LARGEFILE64_SOURCE	SDL/src/SDL_internal.h	/^#define _LARGEFILE64_SOURCE /;"	d
__APPLETV_OS_VERSION_MAX_ALLOWED	SDL/src/SDL_internal.h	/^#define __APPLETV_OS_VERSION_MAX_ALLOWED /;"	d
__IPHONE_OS_VERSION_MAX_ALLOWED	SDL/src/SDL_internal.h	/^#define __IPHONE_OS_VERSION_MAX_ALLOWED /;"	d
__MAC_OS_X_VERSION_MAX_ALLOWED	SDL/src/SDL_internal.h	/^#define __MAC_OS_X_VERSION_MAX_ALLOWED /;"	d
__anon3a77baf90103	SDL/src/SDL_utils_c.h	/^{$/;"	g
__anon8321728e0108	SDL/src/SDL_properties.c	/^{$/;"	s	file:
__anon8321728e020a	SDL/src/SDL_properties.c	/^    union {$/;"	u	struct:__anon8321728e0108	file:
__anon8321728e0308	SDL/src/SDL_properties.c	/^{$/;"	s	file:
__anonb672b4030103	SDL/src/SDL_log.c	/^enum {$/;"	g	file:
__anond5e685520103	SDL/src/SDL_error_c.h	/^{$/;"	g
__anondeac29920108	SDL/src/SDL_utils.c	/^    {$/;"	s	function:SDL_CreateDeviceName	file:
assertion_handler	SDL/src/SDL_assert.c	/^static SDL_AssertionHandler assertion_handler = SDL_PromptAssertion;$/;"	v	typeref:typename:SDL_AssertionHandler	file:
assertion_mutex	SDL/src/SDL_assert.c	/^static SDL_Mutex *assertion_mutex = NULL;$/;"	v	typeref:typename:SDL_Mutex *	file:
assertion_userdata	SDL/src/SDL_assert.c	/^static void *assertion_userdata = NULL;$/;"	v	typeref:typename:void *	file:
boolean_value	SDL/src/SDL_properties.c	/^        bool boolean_value;$/;"	m	union:__anon8321728e0108::__anon8321728e020a	typeref:typename:bool	file:
calc_hash	SDL/src/SDL_hashtable.c	/^static SDL_INLINE Uint32 calc_hash(const SDL_HashTable *table, const void *key)$/;"	f	typeref:typename:SDL_INLINE Uint32	file:
callback	SDL/src/SDL_hints.c	/^    SDL_HintCallback callback;$/;"	m	struct:SDL_HintWatch	typeref:typename:SDL_HintCallback	file:
callback	SDL/src/SDL_properties.c	/^    SDL_EnumeratePropertiesCallback callback;$/;"	m	struct:EnumerateOnePropertyData	typeref:typename:SDL_EnumeratePropertiesCallback	file:
callbacks	SDL/src/SDL_hints.c	/^    SDL_HintWatch *callbacks;$/;"	m	struct:SDL_Hint	typeref:typename:SDL_HintWatch *	file:
category	SDL/src/SDL_log.c	/^    int category;$/;"	m	struct:SDL_LogLevel	typeref:typename:int	file:
cleanup	SDL/src/SDL_properties.c	/^    SDL_CleanupPropertyCallback cleanup;$/;"	m	struct:__anon8321728e0108	typeref:typename:SDL_CleanupPropertyCallback	file:
consoleAttached	SDL/src/SDL_log.c	/^} consoleAttached = CONSOLE_UNATTACHED;$/;"	v	typeref:enum:__anonb672b4030103
count	SDL/src/SDL_utils.c	/^    const int count;$/;"	m	struct:GetOneObjectData	typeref:typename:const int	file:
debug_print	SDL/src/SDL_assert.c	/^static void debug_print(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
delete_item	SDL/src/SDL_hashtable.c	/^static void delete_item(SDL_HashTable *ht, SDL_HashItem *item)$/;"	f	typeref:typename:void	file:
destroy	SDL/src/SDL_hashtable.c	/^    SDL_HashDestroyCallback destroy;$/;"	m	struct:SDL_HashTable	typeref:typename:SDL_HashDestroyCallback	file:
destroy_all	SDL/src/SDL_hashtable.c	/^static void destroy_all(SDL_HashTable *table)$/;"	f	typeref:typename:void	file:
dst_properties	SDL/src/SDL_properties.c	/^    SDL_Properties *dst_properties;$/;"	m	struct:CopyOnePropertyData	typeref:typename:SDL_Properties *	file:
entry	SDL/src/SDL_list.h	/^    void *entry;$/;"	m	struct:SDL_ListNode	typeref:typename:void *
error	SDL/src/SDL_error_c.h	/^    SDL_ErrorCode error;$/;"	m	struct:SDL_error	typeref:typename:SDL_ErrorCode
find_first_item	SDL/src/SDL_hashtable.c	/^static SDL_HashItem *find_first_item(const SDL_HashTable *ht, const void *key, Uint32 hash)$/;"	f	typeref:typename:SDL_HashItem *	file:
find_item	SDL/src/SDL_hashtable.c	/^static SDL_HashItem *find_item(const SDL_HashTable *ht, const void *key, Uint32 hash, Uint32 *i,/;"	f	typeref:typename:SDL_HashItem *	file:
float_value	SDL/src/SDL_properties.c	/^        float float_value;$/;"	m	union:__anon8321728e0108::__anon8321728e020a	typeref:typename:float	file:
free_func	SDL/src/SDL_error_c.h	/^    SDL_free_func free_func;$/;"	m	struct:SDL_error	typeref:typename:SDL_free_func
get_probe_length	SDL/src/SDL_hashtable.c	/^static SDL_INLINE Uint32 get_probe_length(Uint32 zero_idx, Uint32 actual_idx, Uint32 num_buckets/;"	f	typeref:typename:SDL_INLINE Uint32	file:
hash	SDL/src/SDL_hashtable.c	/^    SDL_HashCallback hash;$/;"	m	struct:SDL_HashTable	typeref:typename:SDL_HashCallback	file:
hash	SDL/src/SDL_hashtable.c	/^    Uint32 hash;$/;"	m	struct:SDL_HashItem	typeref:typename:Uint32	file:
hash_mask	SDL/src/SDL_hashtable.c	/^    Uint32 hash_mask;$/;"	m	struct:SDL_HashTable	typeref:typename:Uint32	file:
hash_string_djbxor	SDL/src/SDL_hashtable.c	/^static SDL_INLINE Uint32 hash_string_djbxor(const char *str, size_t len)$/;"	f	typeref:typename:SDL_INLINE Uint32	file:
insert_item	SDL/src/SDL_hashtable.c	/^static SDL_HashItem *insert_item(SDL_HashItem *item_to_insert, SDL_HashItem *table, Uint32 hash_/;"	f	typeref:typename:SDL_HashItem *	file:
key	SDL/src/SDL_hashtable.c	/^    const void *key;$/;"	m	struct:SDL_HashItem	typeref:typename:const void *	file:
keymatch	SDL/src/SDL_hashtable.c	/^    SDL_HashKeyMatchCallback keymatch;$/;"	m	struct:SDL_HashTable	typeref:typename:SDL_HashKeyMatchCallback	file:
len	SDL/src/SDL_error_c.h	/^    size_t len;$/;"	m	struct:SDL_error	typeref:typename:size_t
live	SDL/src/SDL_hashtable.c	/^    Uint32 live : 1;$/;"	m	struct:SDL_HashItem	typeref:typename:Uint32:1	file:
lock	SDL/src/SDL_hashtable.c	/^    SDL_RWLock *lock;  \/\/ NULL if not created threadsafe$/;"	m	struct:SDL_HashTable	typeref:typename:SDL_RWLock *	file:
lock	SDL/src/SDL_properties.c	/^    SDL_Mutex *lock;$/;"	m	struct:__anon8321728e0308	typeref:typename:SDL_Mutex *	file:
main	src/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
max_probe_len	SDL/src/SDL_hashtable.c	/^    Uint32 max_probe_len;$/;"	m	struct:SDL_HashTable	typeref:typename:Uint32	file:
maybe_resize	SDL/src/SDL_hashtable.c	/^static bool maybe_resize(SDL_HashTable *ht)$/;"	f	typeref:typename:bool	file:
next	SDL/src/SDL_hints.c	/^    struct SDL_HintWatch *next;$/;"	m	struct:SDL_HintWatch	typeref:struct:SDL_HintWatch *	file:
next	SDL/src/SDL_list.h	/^    struct SDL_ListNode *next;$/;"	m	struct:SDL_ListNode	typeref:struct:SDL_ListNode *
next	SDL/src/SDL_log.c	/^    struct SDL_LogLevel *next;$/;"	m	struct:SDL_LogLevel	typeref:struct:SDL_LogLevel *	file:
nibble	SDL/src/SDL_guid.c	/^static unsigned char nibble(unsigned char c)$/;"	f	typeref:typename:unsigned char	file:
num_objects	SDL/src/SDL_utils.c	/^    int num_objects;$/;"	m	struct:GetOneObjectData	typeref:typename:int	file:
num_occupied_slots	SDL/src/SDL_hashtable.c	/^    Uint32 num_occupied_slots;$/;"	m	struct:SDL_HashTable	typeref:typename:Uint32	file:
number_value	SDL/src/SDL_properties.c	/^        Sint64 number_value;$/;"	m	union:__anon8321728e0108::__anon8321728e020a	typeref:typename:Sint64	file:
objects	SDL/src/SDL_utils.c	/^    void **objects;$/;"	m	struct:GetOneObjectData	typeref:typename:void **	file:
pointer_value	SDL/src/SDL_properties.c	/^        void *pointer_value;$/;"	m	union:__anon8321728e0108::__anon8321728e020a	typeref:typename:void *	file:
prefix	SDL/src/SDL_utils.c	/^        const char *prefix;$/;"	m	struct:SDL_CreateDeviceName::__anondeac29920108	typeref:typename:const char *	file:
priority	SDL/src/SDL_hints.c	/^    SDL_HintPriority priority;$/;"	m	struct:SDL_Hint	typeref:typename:SDL_HintPriority	file:
priority	SDL/src/SDL_log.c	/^    SDL_LogPriority priority;$/;"	m	struct:SDL_LogLevel	typeref:typename:SDL_LogPriority	file:
probe_len	SDL/src/SDL_hashtable.c	/^    Uint32 probe_len : 31;$/;"	m	struct:SDL_HashItem	typeref:typename:Uint32:31	file:
props	SDL/src/SDL_properties.c	/^    SDL_HashTable *props;$/;"	m	struct:__anon8321728e0308	typeref:typename:SDL_HashTable *	file:
props	SDL/src/SDL_properties.c	/^    SDL_PropertiesID props;$/;"	m	struct:EnumerateOnePropertyData	typeref:typename:SDL_PropertiesID	file:
realloc_func	SDL/src/SDL_error_c.h	/^    SDL_realloc_func realloc_func;$/;"	m	struct:SDL_error	typeref:typename:SDL_realloc_func
replacement	SDL/src/SDL_utils.c	/^        const char *replacement;$/;"	m	struct:SDL_CreateDeviceName::__anondeac29920108	typeref:typename:const char *	file:
resize	SDL/src/SDL_hashtable.c	/^static bool resize(SDL_HashTable *ht, Uint32 new_size)$/;"	f	typeref:typename:bool	file:
result	SDL/src/SDL_properties.c	/^    bool result;$/;"	m	struct:CopyOnePropertyData	typeref:typename:bool	file:
stderrHandle	SDL/src/SDL_log.c	/^static HANDLE stderrHandle = NULL;$/;"	v	typeref:typename:HANDLE	file:
str	SDL/src/SDL_error_c.h	/^    char *str;$/;"	m	struct:SDL_error	typeref:typename:char *
string_storage	SDL/src/SDL_properties.c	/^    char *string_storage;$/;"	m	struct:__anon8321728e0108	typeref:typename:char *	file:
string_value	SDL/src/SDL_properties.c	/^        char *string_value;$/;"	m	union:__anon8321728e0108::__anon8321728e020a	typeref:typename:char *	file:
table	SDL/src/SDL_hashtable.c	/^    SDL_HashItem *table;$/;"	m	struct:SDL_HashTable	typeref:typename:SDL_HashItem *	file:
triggered_assertions	SDL/src/SDL_assert.c	/^static SDL_AssertData *triggered_assertions = NULL;$/;"	v	typeref:typename:SDL_AssertData *	file:
type	SDL/src/SDL_properties.c	/^    SDL_PropertyType type;$/;"	m	struct:__anon8321728e0108	typeref:typename:SDL_PropertyType	file:
type	SDL/src/SDL_utils.c	/^    const SDL_ObjectType type;$/;"	m	struct:GetOneObjectData	typeref:typename:const SDL_ObjectType	file:
userdata	SDL/src/SDL_hashtable.c	/^    void *userdata;$/;"	m	struct:SDL_HashTable	typeref:typename:void *	file:
userdata	SDL/src/SDL_hints.c	/^    void *userdata;$/;"	m	struct:SDL_HintWatch	typeref:typename:void *	file:
userdata	SDL/src/SDL_properties.c	/^    void *userdata;$/;"	m	struct:EnumerateOnePropertyData	typeref:typename:void *	file:
userdata	SDL/src/SDL_properties.c	/^    void *userdata;$/;"	m	struct:__anon8321728e0108	typeref:typename:void *	file:
value	SDL/src/SDL_hashtable.c	/^    const void *value;$/;"	m	struct:SDL_HashItem	typeref:typename:const void *	file:
value	SDL/src/SDL_hints.c	/^    char *value;$/;"	m	struct:SDL_Hint	typeref:typename:char *	file:
value	SDL/src/SDL_properties.c	/^    } value;$/;"	m	struct:__anon8321728e0108	typeref:union:__anon8321728e0108::__anon8321728e020a	file:
